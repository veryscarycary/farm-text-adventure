--- !ruby/object:Game
player: !ruby/object:Player
  inventory:
  - &37 !ruby/object:Item
    name: bucket
    aliases: []
    description: It's an old rusty bucket.
    location_description: There is an empty bucket sitting against one of the stalls.
    read_description: 
    use_description: 
    associated_location: &1 !ruby/object:Location
      name: barn
      description: You arrive at what looks like a very dilapidated barn. It's clear
        that it hasn't been used in ages. There are a few old horse stalls here but
        no sign of horses.
      items:
      - !ruby/object:Item
        name: stalls
        aliases: []
        description: The stalls are kind of dirty and look like they haven't been
          tended to in quite some time.
        location_description: ''
        read_description: 
        use_description: 
        associated_location: *1
        reveal_description: 
        use_redirect: 
        applicable_commands: []
        custom_commands: {}
        state: 
        state_descriptions: {}
        command_restrictions: {}
        state_actions: {}
        ownership_actions: {}
        use_action: 
        use_on_doing_actions: {}
        use_on_receiving_actions: {}
        owns: []
        belongs_to: 
        requires_time: false
        is_hidden: false
        will_reveal_owned_items_when_looked_at: true
      people: []
      blocked_paths: {}
      narrative_events: []
      associated_map: &3 !ruby/object:Map
        grid:
        - - &2 !ruby/object:Location
            name: waterfall
            description: The sound of rushing water is envelopes your senses. Before
              you lies a large waterfall.
            items:
            - !ruby/object:Item
              name: water
              aliases:
              - rapid water
              description: It's rapidly-moving water.
              location_description: ''
              read_description: 
              use_description: 
              associated_location: *2
              reveal_description: 
              use_redirect: 
              applicable_commands:
              - :use_on
              custom_commands: {}
              state: 
              state_descriptions: {}
              command_restrictions: {}
              state_actions: {}
              ownership_actions: {}
              use_action: 
              use_on_doing_actions: {}
              use_on_receiving_actions:
                :bucket: |-
                  lambda do |doing_item|
                        putsy 'The water is moving too rapidly here to catch the water in the bucket!'
                      end
              owns: []
              belongs_to: 
              requires_time: false
              is_hidden: false
              will_reveal_owned_items_when_looked_at: false
            people: []
            blocked_paths: {}
            narrative_events: []
            associated_map: *3
          - *1
          - &4 !ruby/object:Location
            name: old tree
            description: ''
            items:
            - &7 !ruby/object:Item
              name: tree
              aliases:
              - old tree
              description: It is a tall, old tree. It's bark is thick and rough with
                patches that can be gripped easily.
              location_description: You see an old tree that looks like it has been
                through multiple human lifetimes.
              read_description: 
              use_description: 
              associated_location: *4
              reveal_description: 
              use_redirect: 
              applicable_commands: []
              custom_commands:
                :climb:
                  :aliases:
                  - climb the tree
                  - climb tree
                  :is_hidden: true
                  :location_description: CLIMB the tree?
                  :action: "lambda do\n      cletus = GAME._check_for_item('cletus',
                    nil, {include_hidden: true})\n      cletus.is_hidden = false\n
                    \     \n      if cletus.state == :far_and_watered\n        cletus.update_state(:close_and_watered)\n
                    \     else\n        cletus.update_state(:close)\n      end\n\n
                    \     GAME.map.current_location = TOP_OF_TREE\n      GAME.map.print_current_location_description\n
                    \   end"
              state: 
              state_descriptions: {}
              command_restrictions: {}
              state_actions: {}
              ownership_actions: {}
              use_action: 
              use_on_doing_actions: {}
              use_on_receiving_actions: {}
              owns:
              - &5 !ruby/object:Person
                name: man
                aliases:
                - strange man
                - cletus
                description: He has a long beard and wiry white hair that's topped
                  by a ragged felt sombrero. He's crouched on the inside of a tree
                  limb. It's a wonder he hasn't fallen yet. What a strange fellow.
                location_description: There is a strange man perched up on one of
                  the branches.
                read_description: 
                use_description: 
                associated_location: &6 !ruby/object:Location
                  name: top of tree
                  description: You are standing among the upper limbs of the old tree.
                  items:
                  - *5
                  - !ruby/object:Item
                    name: climb down command hack
                    aliases: []
                    description: ''
                    location_description: CLIMB DOWN?
                    read_description: 
                    use_description: 
                    associated_location: *6
                    reveal_description: 
                    use_redirect: 
                    applicable_commands: []
                    custom_commands:
                      :climb_down:
                        :aliases:
                        - climb
                        - climb down
                        :is_hidden: false
                        :location_description: ''
                        :action: |-
                          lambda do
                                cletus = GAME._check_for_item('cletus')
                                cletus.update_state(:far)

                                GAME.map.current_location = OLD_TREE
                                GAME.map.print_current_location_description
                              end
                    state: 
                    state_descriptions: {}
                    command_restrictions: {}
                    state_actions: {}
                    ownership_actions: {}
                    use_action: 
                    use_on_doing_actions: {}
                    use_on_receiving_actions: {}
                    owns: []
                    belongs_to: 
                    requires_time: false
                    is_hidden: false
                    will_reveal_owned_items_when_looked_at: false
                  people: []
                  blocked_paths:
                    west:
                      :obstruction: sheer drop
                    east:
                      :obstruction: sheer drop
                    north:
                      :obstruction: sheer drop
                    south:
                      :obstruction: sheer drop
                  narrative_events: []
                  associated_map: 
                reveal_description: There is a strange man perched up on one of the
                  branches.
                use_redirect: 
                applicable_commands:
                - :talk_to
                custom_commands: {}
                state: :far
                state_descriptions:
                  :far:
                    :location: There is a strange man perched up on one of the branches.
                    :item: ''
                  :close:
                    :location: A strange man is perched on one of the branches.
                    :item: ''
                  :far_and_watered:
                    :location: There is a strange man perched up on one of the branches.
                    :item: ''
                  :close_and_watered:
                    :location: There is a strange man perched up on one of the branches.
                    :item: ''
                command_restrictions:
                  :talk_to:
                    :restricted_states:
                    - :far
                state_actions: {}
                ownership_actions: {}
                use_action: 
                use_on_doing_actions: {}
                use_on_receiving_actions:
                  :water: "lambda do |doing_item|\n    GAME.player.drop_from_inventory(doing_item)\n\n
                    \   putsy 'OH MY LORD I FEEL SO COOL. THANK YOU!! Well, I wish
                    I could pay you with some proper coin but all I have is this mysterious
                    powder that I found in the barn over there.\n    It has some bright,
                    weird colors to it so I figured it might give me a good ride to
                    the next dimension, if you get my drift. But I feel like you would
                    be more responsible with it. Here!'\n\n    self.remove_owned_item(MIRACLE_GROW)\n
                    \   GAME.player.add_to_inventory(MIRACLE_GROW)\n  end\n  "
                owns:
                - !ruby/object:Item
                  name: sombrero
                  aliases: []
                  description: It is a wide felt sombrero. Perfect for blocking out
                    the sun's harmful rays.
                  location_description: ''
                  read_description: 
                  use_description: 
                  associated_location: 
                  reveal_description: 
                  use_redirect: 
                  applicable_commands: []
                  custom_commands: {}
                  state: 
                  state_descriptions: {}
                  command_restrictions: {}
                  state_actions: {}
                  ownership_actions: {}
                  use_action: 
                  use_on_doing_actions: {}
                  use_on_receiving_actions: {}
                  owns: []
                  belongs_to: *5
                  requires_time: false
                  is_hidden: false
                  will_reveal_owned_items_when_looked_at: false
                belongs_to: *7
                requires_time: false
                is_hidden: false
                will_reveal_owned_items_when_looked_at: false
                response: |-
                  OH BOY, IT'S HOTTER THAN HELL OUT HERE. I got wicked high off of some peyote and when I came to my senses, I was all the way up in this here tree.
                  Funny thing is.. I'm afraid of heights. Otherwise, I'd be under some shelter somewhere. If I only had something to cool me down...
                can_take: false
              belongs_to: 
              requires_time: false
              is_hidden: false
              will_reveal_owned_items_when_looked_at: true
            people: []
            blocked_paths: {}
            narrative_events: []
            associated_map: *3
        - - &8 !ruby/object:Location
            name: stream
            description: You stumble across a moving body of water.
            items:
            - !ruby/object:Item
              name: water
              aliases:
              - rapid water
              description: It's rapidly-moving water.
              location_description: |-
                It looks like a healthy stream that
                  any ecosystem could thrive off of.
              read_description: 
              use_description: 
              associated_location: *8
              reveal_description: 
              use_redirect: 
              applicable_commands:
              - :use_on
              custom_commands: {}
              state: 
              state_descriptions: {}
              command_restrictions: {}
              state_actions: {}
              ownership_actions: {}
              use_action: 
              use_on_doing_actions: {}
              use_on_receiving_actions:
                :bucket: |-
                  lambda do |doing_item|
                        putsy 'The water is moving too rapidly here to catch the water in the bucket!'
                      end
              owns: []
              belongs_to: 
              requires_time: false
              is_hidden: false
              will_reveal_owned_items_when_looked_at: false
            people: []
            blocked_paths: {}
            narrative_events: []
            associated_map: *3
          - !ruby/object:Location
            name: field
            description: You find yourself in an open field. The sun is shining very
              brightly and you feel a faint breeze on your skin. There is a fence
              to the south.
            items: []
            people: []
            blocked_paths: {}
            narrative_events: []
            associated_map: *3
          - &9 !ruby/object:Location
            name: dry earth
            description: ''
            items:
            - !ruby/object:Item
              name: earth
              aliases:
              - dry earth
              - land
              - soil
              - ground
              description: It's earth.
              location_description: There isn't much here. It's nothing but a barren
                plot of land. The ground is very dry.
              read_description: 
              use_description: 
              associated_location: *9
              reveal_description: 
              use_redirect: 
              applicable_commands: []
              custom_commands: {}
              state: :untouched
              state_descriptions:
                :untouched:
                  :location: There isn't much here. It's nothing but a barren plot
                    of land. The ground is very dry.
                  :item: The ground is quite dry. I'd be surprised if anything could
                    grow here.
                :plowed:
                  :location: You arrive at a thoroughly plowed piece of land, but
                    there isn't much else going on here.
                  :item: The soil is plowed, but is still very dry.
                :wet:
                  :location: The land here is quite wet.
                  :item: The ground is wet.
                :powdered:
                  :location: The land here very dry and has a layer of powder over
                    it.
                  :item: The ground is dry and has powder spread over it.
                :plowed_and_powdered:
                  :location: The land here is thoroughly plowed and has a powder spread
                    over it.
                  :item: The ground is dry and has powder spread over it.
                :plowed_and_wet:
                  :location: The land here looks decently plowed and watered. It could
                    be the beginning of something beautiful.
                  :item: The soil is wet and plowed.
                :plowed_and_seeded:
                  :location: The land here plowed and seeded. It still looks awfully
                    dry though.
                  :item: The soil is plowed and seeded.
                :wet_and_powdered:
                  :location: The land here is wet and has powder spread over it.
                  :item: The ground is wet and has powder spread over it.
                :plowed_and_wet_and_seeded:
                  :location: The land here has been plowed, watered, and seeded. I
                    wonder how long it will take to grow.
                  :item: The soil is plowed, wet, and seeded.
                :plowed_and_wet_and_powdered:
                  :location: The land here looks decently plowed and watered and has
                    a bubbly film where the powder dissolved.
                  :item: The soil is wet and plowed and has a bubbly film where the
                    powder dissolved.
                :plowed_and_seeded_and_powdered:
                  :location: The land here looks decently plowed with seeds and has
                    a layer of white powder on it.
                  :item: The soil is plowed with seeds and has a layer of white powder
                    on it.
                :grown:
                  :location: There is a large, healthy tomato plant growing here.
                    It's amazing this thing grew so fast.
                  :item: It's a healthy garden, that's for sure.
              command_restrictions: {}
              state_actions: {}
              ownership_actions: {}
              use_action: 
              use_on_doing_actions: {}
              use_on_receiving_actions:
                :water: |-
                  lambda do |doing_item|
                        if @state == :untouched
                          update_state(:wet)

                          putsy 'You poured the water onto the ground. The dry earth soaks up the water and gives it a soppy, dark look.'
                        elsif @state == :plowed
                          update_state(:plowed_and_wet)

                          putsy 'You poured the water onto the ground. The dry, plowed earth soaks up the water and gives the soil a soppy, dark look.'
                        elsif @state == :powdered
                          update_state(:wet_and_powdered)

                          putsy 'You poured the water onto the ground. The dry earth soaks up the water and gives it a soppy, dark look. The powder dissolves into the earth with a bubbling noise.'
                        elsif @state == :plowed_and_seeded
                          update_state(:plowed_and_wet_and_seeded)

                          putsy 'You poured the water onto the ground. The dry, plowed earth soaks up the water and gives the soil a soppy, dark look. I wonder how long it will take for these crops to grow.'
                        elsif @state == :plowed_and_powdered
                          update_state(:plowed_and_wet_and_powdered)

                          putsy 'You poured the water onto the ground. The dry, plowed earth soaks up the water and gives the soil a soppy, dark look. The powder dissolves into the earth with a bubbling noise.'
                        else
                          putsy 'You poured the water onto the ground. The wet earth gets a little soppier. I think that might be enough water.'
                        end

                        GAME.player.drop_from_inventory(doing_item)
                      end
                :seeds: "lambda do |doing_item|\n      if @state == :untouched ||
                  @state == :wet || @state == :powdered || @state == :wet_and_powdered\n
                  \       putsy 'The ground is not tilled properly. You cannot put
                  the seeds in the earth.'\n        return\n      end\n      \n      if
                  @state == :plowed_and_wet_and_powdered\n        'All of a sudden,
                  a stem bursts through the soil and wiggles higher and higher, spreading
                  out soft branches until it stands slightly larger than you. You
                  see leafs pop out, one by one, and little green bulbs forming under
                  them. In a matter of seconds, you see heavy ripe tomatoes drooping
                  off of the plant before you.'\n      else \n        putsy 'You carefully
                  pour the seeds onto ground and fold them into the soil.'\n        putsy
                  'Hmm, I wonder if there is anthing I can do to make sure this garden
                  stays healthy.'\n      end\n\n      GAME.player.drop_from_inventory(doing_item)\n
                  \   end"
                :powder: |-
                  lambda do |doing_item|
                        if @state == :plowed_and_wet_and_seeded
                          update_state(:grown)

                          putsy 'You sprinkle the powder evenly across the soil.'
                          putsy 'All of a sudden, a stem bursts through the soil and wiggles higher and higher, spreading out soft branches until it stands slightly larger than you. You see leafs pop out, one by one, and little green bulbs forming under them. In a matter of seconds, you see heavy ripe tomatoes drooping off of the plant before you.'
                        elsif @state == :untouched
                          update_state(:powdered)

                          putsy 'You sprinkle the powder evenly across the ground.'
                        elsif @state == :wet
                          update_state(:wet_and_powdered)

                          putsy 'You sprinkle the powder evenly across the soil.'
                        elsif @state == :plowed
                          update_state(:plowed_and_powdered)

                          putsy 'You sprinkle the powder evenly across the soil.'
                        elsif @state == :plowed_and_wet
                          update_state(:plowed_and_wet_and_powdered)

                          putsy 'You sprinkle the powder evenly across the soil.'
                        elsif @state == :plowed_and_seeded
                          update_state(:plowed_and_seeded_and_powdered)

                          putsy 'You sprinkle the powder evenly across the soil.'
                        else
                          putsy 'You sprinkle the powder evenly across the soil.'
                        end

                        GAME.player.drop_from_inventory(doing_item)
                      end
              owns: []
              belongs_to: 
              requires_time: false
              is_hidden: false
              will_reveal_owned_items_when_looked_at: false
            people: []
            blocked_paths: {}
            narrative_events:
            - :name: plow_earth
              :condition: |-
                lambda do |current_location|
                      tractor = self._check_for_item('tractor')
                      !!tractor && tractor.state == :fixed
                    end
              :action: "lambda do |current_location|\n      putsy \"You drive the
                tractor across the dry earth and watch as the plow attachment shreds
                and folds the soil beneath you. The soil has been properly plowed.\\n\\nJust
                as you finish plowing the soil. You hear the engine struggle and lock
                up abruptly. Uh oh, this may have been the machine's last voyage.\"\n
                \     tractor = self._check_for_item(\"tractor\")\n      tractor.update_state(:broken)\n
                \     \n      hood = self._check_for_item(\"hood\")\n      hood.update_state(:closed)\n\n
                \     engine = self._check_for_item(\"engine\")\n      engine.update_state(:broken)\n
                \     engine.is_hidden = true\n\n      earth = self._check_for_item(\"earth\")\n\n
                \     if earth.state == :wet\n        earth.update_state(:plowed_and_wet)\n
                \     elsif earth.state == :wet_and_powdered\n        earth.update_state(:plowed_and_wet_and_powdered)\n
                \     else\n        earth.update_state(:plowed)\n      end\n\n      self.player.remove_following_item(tractor)\n
                \   end"
            associated_map: *3
        - - &10 !ruby/object:Location
            name: pond
            description: You arrive at a pond.
            items:
            - !ruby/object:Item
              name: water
              aliases: &27 []
              description: It looks like fresh, cold water.
              location_description: The water is very calm here and it makes you feel
                at peace with the world.
              read_description: 
              use_description: 
              associated_location: *10
              reveal_description: 
              use_redirect: 
              applicable_commands: &28
              - :drop
              - :use_on
              custom_commands: &29 {}
              state: 
              state_descriptions: &30 {}
              command_restrictions: &31 {}
              state_actions: &32 {}
              ownership_actions: &33 {}
              use_action: 
              use_on_doing_actions: &34 {}
              use_on_receiving_actions: &35
                :bucket: |-
                  lambda do |doing_item|
                        doing_item.state = :full
                        new_water = self.clone
                        doing_item.owns << new_water
                        doing_item.owns[-1].belongs_to = doing_item
                        GAME.player.add_to_inventory(new_water)
                        putsy 'You fill the bucket with water.'
                      end
              owns: &36 []
              belongs_to: 
              requires_time: false
              is_hidden: false
              will_reveal_owned_items_when_looked_at: false
            people: []
            blocked_paths:
              east:
                :obstruction: white picket fence
              south: &21
                :obstruction: wall
            narrative_events: []
            associated_map: *3
          - &11 !ruby/object:Location
            name: front yard
            description: There is a quaint, southern-style house in front of you toward
              the south.
            items:
            - !ruby/object:Item
              name: house
              aliases: []
              description: It's a southern-style house -- kind of like the one in
                Little House on the Prairie.
              location_description: ''
              read_description: 
              use_description: 
              associated_location: *11
              reveal_description: 
              use_redirect: 
              applicable_commands: []
              custom_commands: {}
              state: 
              state_descriptions: {}
              command_restrictions: {}
              state_actions: {}
              ownership_actions: {}
              use_action: 
              use_on_doing_actions: {}
              use_on_receiving_actions: {}
              owns: []
              belongs_to: 
              requires_time: false
              is_hidden: false
              will_reveal_owned_items_when_looked_at: false
            - !ruby/object:Item
              name: gate
              aliases:
              - locked gate
              - lock
              description: It's a white-picket gate.
              location_description: A gate is open to the north.
              read_description: 
              use_description: 
              associated_location: *11
              reveal_description: 
              use_redirect: 
              applicable_commands:
              - :open
              custom_commands: {}
              state: :open
              state_descriptions:
                :combolocked:
                  :location: There is a locked gate to your north.
                  :item: The gate is locked by a 4-digit numerical combination lock.
                :open:
                  :location: A gate is open to the north.
                  :item: The gate is wide open.
                :closed:
                  :location: A gate is closed to the north.
                  :item: The gate is closed shut.
              command_restrictions:
                :open:
                  :restricted_states:
                  - :combolocked
                  :required_user_input: '0618'
              state_actions:
                :open: lambda {|item| item.associated_location.remove_obstruction('north')
                  }
              ownership_actions: {}
              use_action: 
              use_on_doing_actions: {}
              use_on_receiving_actions: {}
              owns: []
              belongs_to: 
              requires_time: false
              is_hidden: false
              will_reveal_owned_items_when_looked_at: false
            - &12 !ruby/object:Item
              name: mailbox
              aliases: []
              description: It's an old-style mailbox with the red lever sticking up.
              location_description: You are standing near a mailbox.
              read_description: 
              use_description: 
              associated_location: *11
              reveal_description: 
              use_redirect: 
              applicable_commands:
              - :open
              custom_commands: {}
              state: :closed
              state_descriptions:
                :open:
                  :location: You are standing near an open mailbox.
                  :item: The mailbox is open.
                :closed:
                  :location: You are standing near a mailbox.
                  :item: The mailbox is closed.
              command_restrictions: {}
              state_actions: {}
              ownership_actions: {}
              use_action: 
              use_on_doing_actions: {}
              use_on_receiving_actions: {}
              owns:
              - !ruby/object:Item
                name: letter
                aliases: []
                description: The letter is signed and dated by somebody. It looks
                  pretty official.
                location_description: There is a letter inside the mailbox.
                read_description: |-
                  The letterhead of the message reads 'Perry Ford Bank'
                  in large block font. The letter reads, 'It has come to our
                  attention that you have been delinquent on your property loan
                  payment for more than 6 months. Pursuant to UCC code 018B,
                  we have the authority to foreclose your property if we do
                  not find evidence of active farming activities taking
                  place at your address. Our investigation will take place
                  on October 15, 2018 at 6PM.'
                use_description: 
                associated_location: 
                reveal_description: There is a letter inside the mailbox.
                use_redirect: 
                applicable_commands:
                - :take
                - :read
                - :open
                custom_commands: {}
                state: :open
                state_descriptions:
                  :open:
                    :location: There is a letter inside the mailbox.
                    :item: The letter is signed and dated by somebody. It looks pretty
                      official.
                command_restrictions: {}
                state_actions:
                  :open: lambda {|item| GAME.read_item(item.name) }
                ownership_actions: {}
                use_action: 
                use_on_doing_actions: {}
                use_on_receiving_actions: {}
                owns: []
                belongs_to: *12
                requires_time: false
                is_hidden: true
                will_reveal_owned_items_when_looked_at: false
              belongs_to: 
              requires_time: false
              is_hidden: false
              will_reveal_owned_items_when_looked_at: false
            people: []
            blocked_paths:
              west:
                :obstruction: white picket fence
              east:
                :obstruction: white picket fence
            narrative_events: []
            associated_map: *3
          - &13 !ruby/object:Location
            name: tractor
            description: You arrive at an old shed.
            items:
            - &17 !ruby/object:Item
              name: tractor
              aliases: []
              description: I bet this tractor makes plowing land a breeze.
              location_description: An old tractor with a plow attached to it is parked
                here. It looks like the tractor has seen better days.
              read_description: 
              use_description: 
              associated_location: *13
              reveal_description: 
              use_redirect: 
              applicable_commands:
              - :use
              custom_commands: {}
              state: :broken
              state_descriptions:
                :broken:
                  :location: An old tractor with a plow attached to it is parked here.
                    It looks like the tractor has seen better days.
                  :item: The tractor looks pretty borked. It could use some love underneath
                    the hood.
                :fixed:
                  :location: An old tractor with a plow attached to it is parked here.
                    It looks pretty healthy.
                  :item: The tractor looks pretty healthy. It looks ready to go.
              command_restrictions:
                :use:
                  :restricted_states:
                  - :broken
                  :required_items:
                  - &15 !ruby/object:Item
                    name: key
                    aliases:
                    - metal key
                    - fat metal key
                    description: It's the a fat metal key.
                    location_description: There's a key sitting on the shelf.
                    read_description: 
                    use_description: 
                    associated_location: 
                    reveal_description: There's a key sitting on the shelf in the
                      shed.
                    use_redirect: 
                    applicable_commands:
                    - :use_on
                    - :take
                    custom_commands: {}
                    state: 
                    state_descriptions: {}
                    command_restrictions: {}
                    state_actions: {}
                    ownership_actions: {}
                    use_action: 
                    use_on_doing_actions: {}
                    use_on_receiving_actions: {}
                    owns: []
                    belongs_to: &14 !ruby/object:Item
                      name: shed
                      aliases: []
                      description: The shed is a rusty wind-damaged old thing. There
                        might be something useful in here.
                      location_description: ''
                      read_description: 
                      use_description: 
                      associated_location: *13
                      reveal_description: 
                      use_redirect: 
                      applicable_commands:
                      - :open
                      custom_commands: {}
                      state: :closed
                      state_descriptions:
                        :open:
                          :location: ''
                          :item: The shed is open.
                        :closed:
                          :location: ''
                          :item: The shed is closed.
                      command_restrictions: {}
                      state_actions: {}
                      ownership_actions: {}
                      use_action: 
                      use_on_doing_actions: {}
                      use_on_receiving_actions: {}
                      owns:
                      - !ruby/object:Item
                        name: oil
                        aliases:
                        - motor oil
                        - jug
                        description: It's the golden elixer that machines love so
                          much.
                        location_description: There's a jug of motor oil here.
                        read_description: 
                        use_description: 
                        associated_location: 
                        reveal_description: There's a jug of motor oil in the shed.
                        use_redirect: 
                        applicable_commands:
                        - :use_on
                        - :take
                        custom_commands: {}
                        state: 
                        state_descriptions: {}
                        command_restrictions: {}
                        state_actions: {}
                        ownership_actions: {}
                        use_action: 
                        use_on_doing_actions: {}
                        use_on_receiving_actions: {}
                        owns: []
                        belongs_to: *14
                        requires_time: false
                        is_hidden: true
                        will_reveal_owned_items_when_looked_at: false
                      - *15
                      belongs_to: 
                      requires_time: false
                      is_hidden: false
                      will_reveal_owned_items_when_looked_at: false
                    requires_time: false
                    is_hidden: true
                    will_reveal_owned_items_when_looked_at: false
              state_actions: {}
              ownership_actions: {}
              use_action: "lambda do\n      if self.state == :broken\n        putsy
                'You put the key in the ignition and turn the key. The engine rumbles
                but quickly dies.';\n      else\n        putsy 'You put the key in
                the ignition and turn the key. The engine consistently rumbles. Where
                would you like to go now?'; GAME.player.add_following_item(self);\n
                \     end\n    end\n  "
              use_on_doing_actions: {}
              use_on_receiving_actions:
                :key: "lambda do |doing_item|\n      if self.state == :broken\n        putsy
                  'You put the key in the ignition and turn the key. The engine rumbles
                  but quickly dies.';\n      else\n        putsy 'You put the key
                  in the ignition and turn the key. The engine consistently rumbles.
                  Where would you like to go now?'; GAME.player.add_following_item(self);\n
                  \     end\n    end\n    "
              owns:
              - &16 !ruby/object:Item
                name: hood
                aliases: []
                description: The hood is made of heavy old steel. They don't make
                  'em like they used to.
                location_description: The tractor's hood is closed.
                read_description: 
                use_description: 
                associated_location: 
                reveal_description: 
                use_redirect: 
                applicable_commands:
                - :open
                custom_commands: {}
                state: :closed
                state_descriptions:
                  :open:
                    :location: The tractor's hood is open.
                    :item: The hood is open.
                  :closed:
                    :location: The tractor's hood is closed.
                    :item: The hood is closed.
                command_restrictions: {}
                state_actions: {}
                ownership_actions: {}
                use_action: 
                use_on_doing_actions: {}
                use_on_receiving_actions: {}
                owns:
                - !ruby/object:Item
                  name: engine
                  aliases: []
                  description: The engine is big complicated steel block. Everything
                    looks intact, but it looks like it hasn't been run in ages.
                  location_description: The dusty-looking engine is exposed.
                  read_description: 
                  use_description: 
                  associated_location: 
                  reveal_description: A dusty old engine sits before you. It looks
                    like it could at least use some lubrication.
                  use_redirect: 
                  applicable_commands: []
                  custom_commands: {}
                  state: :broken
                  state_descriptions:
                    :broken:
                      :location: The dusty-looking engine is exposed.
                      :item: The engine doesn't look too healthy.
                    :fixed:
                      :location: The engine is looking healthy.
                      :item: The engine is looking healthy.
                  command_restrictions: {}
                  state_actions: {}
                  ownership_actions: {}
                  use_action: 
                  use_on_doing_actions: {}
                  use_on_receiving_actions:
                    :oil: lambda {|doing_item| self.update_state(:fixed); self.belongs_to.belongs_to.update_state(:fixed);
                      putsy 'You pour the oil into the engine and it seems to slurp
                      it right up. Now if I can just get this thing to start...'}
                  owns: []
                  belongs_to: *16
                  requires_time: false
                  is_hidden: true
                  will_reveal_owned_items_when_looked_at: false
                belongs_to: *17
                requires_time: false
                is_hidden: false
                will_reveal_owned_items_when_looked_at: false
              - !ruby/object:Item
                name: plow
                aliases: []
                description: It has several blades fixed to its wide frame.
                location_description: ''
                read_description: 
                use_description: 
                associated_location: 
                reveal_description: 
                use_redirect: 
                applicable_commands: []
                custom_commands: {}
                state: 
                state_descriptions: {}
                command_restrictions: {}
                state_actions: {}
                ownership_actions: {}
                use_action: 
                use_on_doing_actions: {}
                use_on_receiving_actions: {}
                owns: []
                belongs_to: *17
                requires_time: false
                is_hidden: false
                will_reveal_owned_items_when_looked_at: false
              belongs_to: 
              requires_time: false
              is_hidden: false
              will_reveal_owned_items_when_looked_at: false
            - *14
            people: []
            blocked_paths:
              south:
                :obstruction: wall
              west:
                :obstruction: white picket fence
            narrative_events: []
            associated_map: *3
        - - &18 !ruby/object:Location
            name: bedroom
            description: You are standing in a bedroom.
            items:
            - !ruby/object:Item
              name: bedroom
              aliases: []
              description: It seems pretty cozy in here.
              location_description: It seems pretty cozy in here.
              read_description: 
              use_description: 
              associated_location: *18
              reveal_description: 
              use_redirect: 
              applicable_commands: []
              custom_commands: {}
              state: 
              state_descriptions: {}
              command_restrictions: {}
              state_actions: {}
              ownership_actions: {}
              use_action: 
              use_on_doing_actions: {}
              use_on_receiving_actions: {}
              owns: []
              belongs_to: 
              requires_time: false
              is_hidden: false
              will_reveal_owned_items_when_looked_at: false
            - !ruby/object:Item
              name: bed
              aliases: []
              description: This bed looks comfy.
              location_description: There is a tidy, queen-sized bed with four posts
                up against the center of the wall.
              read_description: 
              use_description: "You snuggle up in the sheets and close your eyes for
                a bit. \n\nHow long was I asleep for? I have work to do."
              associated_location: *18
              reveal_description: 
              use_redirect: 
              applicable_commands:
              - :use
              custom_commands: {}
              state: 
              state_descriptions: {}
              command_restrictions: {}
              state_actions: {}
              ownership_actions: {}
              use_action: lambda { TIME.increment_time(60) }
              use_on_doing_actions: {}
              use_on_receiving_actions: {}
              owns: []
              belongs_to: 
              requires_time: false
              is_hidden: false
              will_reveal_owned_items_when_looked_at: false
            - &20 !ruby/object:Item
              name: desk
              aliases:
              - old desk
              description: It's an old antique desk. I wonder if the owner is a collector.
              location_description: There is an old desk in the corner of the room.
              read_description: 
              use_description: 
              associated_location: *18
              reveal_description: 
              use_redirect: 
              applicable_commands: []
              custom_commands: {}
              state: 
              state_descriptions: {}
              command_restrictions: {}
              state_actions: {}
              ownership_actions: {}
              use_action: 
              use_on_doing_actions: {}
              use_on_receiving_actions: {}
              owns:
              - &19 !ruby/object:Item
                name: picture
                aliases:
                - frame
                - picture frame
                description: It's a picture of a shaggy dog sitting contently beneath
                  an old willow tree.
                location_description: There is a picture of a dog sitting on the desk.
                read_description: 
                use_description: 
                associated_location: 
                reveal_description: 
                use_redirect: 
                applicable_commands:
                - :take
                custom_commands: {}
                state: 
                state_descriptions: {}
                command_restrictions: {}
                state_actions: {}
                ownership_actions: {}
                use_action: 
                use_on_doing_actions: {}
                use_on_receiving_actions: {}
                owns:
                - !ruby/object:Item
                  name: note
                  aliases: []
                  description: It's a note that says, 'You were the best dog a man
                    could have ever hoped for. RIP 06/18'
                  location_description: There is a note that is tucked into the side
                    of the picture frame that says, 'You were the best dog a man could
                    have ever hoped for. RIP 06/18'
                  read_description: 
                  use_description: 
                  associated_location: 
                  reveal_description: There is a note that is tucked into the side
                    of the frame that says, 'You were the best dog a man could have
                    ever hoped for. RIP 06/18'
                  use_redirect: 
                  applicable_commands:
                  - :take
                  custom_commands: {}
                  state: 
                  state_descriptions: {}
                  command_restrictions: {}
                  state_actions: {}
                  ownership_actions: {}
                  use_action: 
                  use_on_doing_actions: {}
                  use_on_receiving_actions: {}
                  owns: []
                  belongs_to: *19
                  requires_time: false
                  is_hidden: true
                  will_reveal_owned_items_when_looked_at: false
                belongs_to: *20
                requires_time: false
                is_hidden: false
                will_reveal_owned_items_when_looked_at: true
              belongs_to: 
              requires_time: false
              is_hidden: false
              will_reveal_owned_items_when_looked_at: false
            - !ruby/object:Item
              name: coat rack
              aliases: []
              description: The coat rack is a thin panel that's screwed into the wall.
              location_description: A coat rack is screwed into one of the walls.
              read_description: 
              use_description: 
              associated_location: *18
              reveal_description: 
              use_redirect: 
              applicable_commands: []
              custom_commands: {}
              state: 
              state_descriptions: {}
              command_restrictions: {}
              state_actions: {}
              ownership_actions: {}
              use_action: 
              use_on_doing_actions: {}
              use_on_receiving_actions: {}
              owns: []
              belongs_to: 
              requires_time: false
              is_hidden: false
              will_reveal_owned_items_when_looked_at: false
            - !ruby/object:Item
              name: hat
              aliases: []
              description: It's a leather hat.
              location_description: A hat is hanging from one of the coat rack rungs.
              read_description: 
              use_description: |-
                You put the hat on your head.

                Hmm, you kinda look like Indiana Jones!
              associated_location: *18
              reveal_description: 
              use_redirect: 
              applicable_commands:
              - :take
              - :use
              custom_commands: {}
              state: 
              state_descriptions: {}
              command_restrictions: {}
              state_actions: {}
              ownership_actions: {}
              use_action: 
              use_on_doing_actions: {}
              use_on_receiving_actions: {}
              owns: []
              belongs_to: 
              requires_time: false
              is_hidden: false
              will_reveal_owned_items_when_looked_at: false
            - !ruby/object:Item
              name: calendar
              aliases: []
              description: It's a glossy paper calendar with a large picture of a
                tractor and cornrows on the top half. Today's date is October 15,
                2018.
              location_description: A calendar is hanging up against the wall.
              read_description: Today's date is October 15, 2018.
              use_description: 
              associated_location: *18
              reveal_description: 
              use_redirect: :read
              applicable_commands:
              - :take
              - :read
              - :use
              custom_commands: {}
              state: 
              state_descriptions: {}
              command_restrictions: {}
              state_actions: {}
              ownership_actions: {}
              use_action: 
              use_on_doing_actions: {}
              use_on_receiving_actions: {}
              owns: []
              belongs_to: 
              requires_time: false
              is_hidden: false
              will_reveal_owned_items_when_looked_at: false
            people: []
            blocked_paths:
              west:
                :obstruction: wall
              north: *21
              south:
                :obstruction: wall
            narrative_events: []
            associated_map: *3
          - &22 !ruby/object:Location
            name: entryway
            description: You enter the entryway of the house.
            items:
            - !ruby/object:Item
              name: entryway
              aliases: []
              description: It seems like a usual entryway with ample walking space
                and baby blue and white striped wallpaper.
              location_description: It seems like a usual entryway with ample walking
                space and baby blue and white striped wallpaper.
              read_description: 
              use_description: 
              associated_location: *22
              reveal_description: 
              use_redirect: 
              applicable_commands: []
              custom_commands: {}
              state: 
              state_descriptions: {}
              command_restrictions: {}
              state_actions: {}
              ownership_actions: {}
              use_action: 
              use_on_doing_actions: {}
              use_on_receiving_actions: {}
              owns: []
              belongs_to: 
              requires_time: false
              is_hidden: false
              will_reveal_owned_items_when_looked_at: false
            - !ruby/object:Item
              name: wallpaper
              aliases: []
              description: The wallpaper has a baby blue color and white stripes.
                Typical ranch house style.
              location_description: ''
              read_description: 
              use_description: 
              associated_location: *22
              reveal_description: 
              use_redirect: 
              applicable_commands: []
              custom_commands: {}
              state: 
              state_descriptions: {}
              command_restrictions: {}
              state_actions: {}
              ownership_actions: {}
              use_action: 
              use_on_doing_actions: {}
              use_on_receiving_actions: {}
              owns: []
              belongs_to: 
              requires_time: false
              is_hidden: false
              will_reveal_owned_items_when_looked_at: false
            - &24 !ruby/object:Item
              name: table
              aliases: entry table
              description: The entry table has a drawer that stretches its entire
                width.
              location_description: There is a thin table with a drawer against the
                wall.
              read_description: 
              use_description: 
              associated_location: *22
              reveal_description: 
              use_redirect: 
              applicable_commands: []
              custom_commands: {}
              state: 
              state_descriptions: {}
              command_restrictions: {}
              state_actions: {}
              ownership_actions: {}
              use_action: 
              use_on_doing_actions: {}
              use_on_receiving_actions: {}
              owns:
              - &23 !ruby/object:Item
                name: drawer
                aliases: []
                description: It's a typical drawer.
                location_description: ''
                read_description: 
                use_description: 
                associated_location: 
                reveal_description: 
                use_redirect: 
                applicable_commands:
                - :open
                custom_commands: {}
                state: :closed
                state_descriptions:
                  :open:
                    :location: The table's drawer is open.
                    :item: The drawer is open.
                  :closed:
                    :location: ''
                    :item: The drawer is closed.
                command_restrictions: {}
                state_actions: {}
                ownership_actions: {}
                use_action: 
                use_on_doing_actions: {}
                use_on_receiving_actions: {}
                owns:
                - !ruby/object:Item
                  name: watch
                  aliases: []
                  description: It's an old, antique watch with a copper color to it.
                    It seems to be working just fine.
                  location_description: There is a watch inside the drawer.
                  read_description: 
                  use_description: 
                  associated_location: 
                  reveal_description: There is a watch inside the drawer
                  use_redirect: :look_at
                  applicable_commands:
                  - :take
                  - :drop
                  - :use
                  custom_commands: {}
                  state: 
                  state_descriptions: {}
                  command_restrictions: {}
                  state_actions: {}
                  ownership_actions: {}
                  use_action: 
                  use_on_doing_actions: {}
                  use_on_receiving_actions: {}
                  owns: []
                  belongs_to: *23
                  requires_time: true
                  is_hidden: true
                  will_reveal_owned_items_when_looked_at: false
                belongs_to: *24
                requires_time: false
                is_hidden: false
                will_reveal_owned_items_when_looked_at: false
              belongs_to: 
              requires_time: false
              is_hidden: false
              will_reveal_owned_items_when_looked_at: false
            people: []
            blocked_paths:
              south:
                :obstruction: wall
            narrative_events: []
            associated_map: *3
          - &25 !ruby/object:Location
            name: living room
            description: You step into a finely-decorated living room.
            items:
            - !ruby/object:Item
              name: living_room
              aliases: []
              description: It's a a finely-decorated living room.
              location_description: ''
              read_description: 
              use_description: 
              associated_location: *25
              reveal_description: 
              use_redirect: 
              applicable_commands: []
              custom_commands: {}
              state: 
              state_descriptions: {}
              command_restrictions: {}
              state_actions: {}
              ownership_actions: {}
              use_action: 
              use_on_doing_actions: {}
              use_on_receiving_actions: {}
              owns: []
              belongs_to: 
              requires_time: false
              is_hidden: false
              will_reveal_owned_items_when_looked_at: false
            - &26 !ruby/object:Item
              name: clock
              aliases:
              - grandfather clock
              description: This grandfather clock looks super old but charming. It
                has a large copper pendulum that swings back and forth.
              location_description: There is a large grandfather clock up against
                the wall.
              read_description: 
              use_description: 
              associated_location: *25
              reveal_description: 
              use_redirect: :look_at
              applicable_commands:
              - :use
              custom_commands: {}
              state: 
              state_descriptions: {}
              command_restrictions: {}
              state_actions: {}
              ownership_actions: {}
              use_action: 
              use_on_doing_actions: {}
              use_on_receiving_actions: {}
              owns:
              - !ruby/object:Item
                name: pendulum
                aliases: []
                description: It's a copper pendulum.
                location_description: ''
                read_description: 
                use_description: 
                associated_location: 
                reveal_description: 
                use_redirect: 
                applicable_commands: []
                custom_commands: {}
                state: 
                state_descriptions: {}
                command_restrictions: {}
                state_actions: {}
                ownership_actions: {}
                use_action: 
                use_on_doing_actions: {}
                use_on_receiving_actions: {}
                owns: []
                belongs_to: *26
                requires_time: false
                is_hidden: false
                will_reveal_owned_items_when_looked_at: false
              belongs_to: 
              requires_time: true
              is_hidden: false
              will_reveal_owned_items_when_looked_at: false
            - !ruby/object:Item
              name: armchair
              aliases:
              - chair
              description: The armchair is made of a soft leather and has a sheen
                to it.
              location_description: An ornate armchair is positioned in the center
                of the room.
              read_description: 
              use_description: |-
                You sit down on the chair. Wow. It's surprisingly comfy.

                 Alright, enough of that.
              associated_location: *25
              reveal_description: 
              use_redirect: 
              applicable_commands:
              - :use
              custom_commands: {}
              state: 
              state_descriptions: {}
              command_restrictions: {}
              state_actions: {}
              ownership_actions: {}
              use_action: 
              use_on_doing_actions: {}
              use_on_receiving_actions: {}
              owns: []
              belongs_to: 
              requires_time: false
              is_hidden: false
              will_reveal_owned_items_when_looked_at: false
            - !ruby/object:Item
              name: tv
              aliases: []
              description: It's an old CRT style tv. What a bulbous looking thing.
              location_description: A tv is sitting in the corner.
              read_description: 
              use_description: 
              associated_location: *25
              reveal_description: 
              use_redirect: 
              applicable_commands:
              - :use
              custom_commands: {}
              state: :off
              state_descriptions:
                :on:
                  :trigger: It quickly illuminates with a THRUMMMMM and shows a congressman
                    standing tall behind a podium. He announces over a crowd, "If
                    we do not resolve our nation's dire food shortage issues quickly,
                    we will have a troublesome winter. Our population growth has been
                    at critical levels for years. This year, we may be at a tipping
                    point."
                  :location: There is a tv playing here.
                  :item: The tv shows a congressman standing tall behind a podium.
                    He announces over a crowd, "If we do not resolve our nation's
                    dire food shortage issues quickly, we will have a troublesome
                    winter. Our population growth has been at critical levels for
                    years. This year, we may be at a tipping point."
                :off:
                  :trigger: The tv switches off as quickly as it turned on, with a
                    residual horizonal white line fading in the center of the screen.
                  :location: A tv is sitting in the corner.
                  :item: The tv is off.
              command_restrictions: {}
              state_actions: {}
              ownership_actions: {}
              use_action: "lambda do\n    if @state == :on\n      update_state(:off)\n\n
                \     off_output = \"You turned off the #{@name}.\"\n\n      putsy
                \"#{off_output} #{@state_descriptions[@state][:trigger]}\"\n\n    elsif
                @state == :off\n      update_state(:on)\n\n      on_output = \"You
                turned on the #{@name}.\"\n\n      putsy \"#{on_output} #{@state_descriptions[@state][:trigger]}\"\n\n
                \   end\n  end\n  "
              use_on_doing_actions: {}
              use_on_receiving_actions: {}
              owns: []
              belongs_to: 
              requires_time: false
              is_hidden: false
              will_reveal_owned_items_when_looked_at: false
            people: []
            blocked_paths:
              east:
                :obstruction: wall
              south:
                :obstruction: wall
              north:
                :obstruction: wall
            narrative_events: []
            associated_map: *3
        current_x: 2
        current_y: 1
        current_location: *9
    reveal_description: 
    use_redirect: 
    applicable_commands:
    - :take
    - :drop
    - :use_on
    custom_commands: {}
    state: :full
    state_descriptions:
      :full:
        :location: ''
        :item: The bucket is filled with water.
      :empty:
        :location: There is an empty bucket sitting against one of the stalls.
        :item: The bucket is empty.
    command_restrictions: {}
    state_actions: {}
    ownership_actions:
      :owns:
        :empty_array: lambda {|owned_item| self.state = :empty; putsy 'The bucket
          is now empty.' }
    use_action: 
    use_on_doing_actions: {}
    use_on_receiving_actions: {}
    owns:
    - !ruby/object:Item
      name: water
      aliases: *27
      description: It looks like fresh, cold water.
      location_description: The water is very calm here and it makes you feel at peace
        with the world.
      read_description: 
      use_description: 
      associated_location: *10
      reveal_description: 
      use_redirect: 
      applicable_commands: *28
      custom_commands: *29
      state: 
      state_descriptions: *30
      command_restrictions: *31
      state_actions: *32
      ownership_actions: *33
      use_action: 
      use_on_doing_actions: *34
      use_on_receiving_actions: *35
      owns: *36
      belongs_to: *37
      requires_time: false
      is_hidden: false
      will_reveal_owned_items_when_looked_at: false
    - &38 !ruby/object:Item
      name: water
      aliases: *27
      description: It looks like fresh, cold water.
      location_description: The water is very calm here and it makes you feel at peace
        with the world.
      read_description: 
      use_description: 
      associated_location: *10
      reveal_description: 
      use_redirect: 
      applicable_commands: *28
      custom_commands: *29
      state: 
      state_descriptions: *30
      command_restrictions: *31
      state_actions: *32
      ownership_actions: *33
      use_action: 
      use_on_doing_actions: *34
      use_on_receiving_actions: *35
      owns: *36
      belongs_to: *37
      requires_time: false
      is_hidden: false
      will_reveal_owned_items_when_looked_at: false
    belongs_to: 
    requires_time: false
    is_hidden: false
    will_reveal_owned_items_when_looked_at: false
  - !ruby/object:Item
    name: seeds
    aliases:
    - pouch
    - paper pouch
    - small paper pouch
    description: It's a small paper pouch of seeds. The label is heavily worn and
      it's hard to make out what kind of seeds they are.
    location_description: There is a small paper pouch lying up against one of the
      stalls.
    read_description: 
    use_description: 
    associated_location: 
    reveal_description: There is a small paper pouch lying up against one of the stalls.
    use_redirect: 
    applicable_commands:
    - :take
    - :drop
    - :use_on
    custom_commands: {}
    state: 
    state_descriptions: {}
    command_restrictions: {}
    state_actions: {}
    ownership_actions: {}
    use_action: 
    use_on_doing_actions: {}
    use_on_receiving_actions: {}
    owns: []
    belongs_to: 
    requires_time: false
    is_hidden: false
    will_reveal_owned_items_when_looked_at: false
  - *38
  - !ruby/object:Item
    name: powder
    aliases:
    - miracle grow
    description: It is a thick powder with specks of blue and yellow. It looks rather
      unnatural.
    location_description: ''
    read_description: 
    use_description: 
    associated_location: 
    reveal_description: 
    use_redirect: 
    applicable_commands:
    - :use_on
    custom_commands: {}
    state: 
    state_descriptions: {}
    command_restrictions: {}
    state_actions: {}
    ownership_actions: {}
    use_action: 
    use_on_doing_actions: {}
    use_on_receiving_actions:
      :soil: "lambda do |doing_item|\n    GAME.player.drop_from_inventory(doing_item)\n\n
        \   putsy 'MAKE PLANTS GROW OR SOMETHING!!'\n  end\n  "
    owns: []
    belongs_to: 
    requires_time: false
    is_hidden: false
    will_reveal_owned_items_when_looked_at: false
  following_items: []
map: *3
time: !ruby/object:GameTime
  hour: 6
  minute: 10
  am_pm: AM
  turn_counter: 20
  current_time: 6:10 AM
